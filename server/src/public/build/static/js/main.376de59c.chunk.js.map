{"version":3,"sources":["data/state.ts","data/store.ts","data/Connection.ts","data/pages.tsx","components/Nav.tsx","components/Header.tsx","assets/user.png","components/ChatImage.tsx","components/Message.tsx","hooks/useChat.ts","components/ChatProfile.tsx","pages/ChatArea.tsx","pages/ComingSoon.tsx","assets/home1.jpg","pages/Home.tsx","pages/Profile.tsx","pages/SignIn.tsx","components/Main.tsx","components/App.tsx","index.tsx"],"names":["initialState","isAuthorized","currentPage","parseInt","localStorage","getItem","state","createSlice","name","reducers","togglePage","store","action","payload","setItem","toString","authorization","removeItem","actions","configureStore","reducer","globalState","authSocket","io","SOCKET_SERVER_URL","transports","secure","userSoket","socketIOClient","autoConnect","auth","token","on","err","console","log","data","status","dispatch","setTimeout","connect","msg","disconnect","signOut","pages","Map","set","id","view","icon","className","pageIds","Nav","getState","map","pageId","page","get","classNames","current","onClick","Component","Header","ChatImage","src","this","props","picSrc","defaultUserPic","alt","hideOnlineIcon","OnlineIndicator","online","offline","Message","condInfo","undefined","showInfo","message","self","userName","text","time","NEW_CHAT_MESSAGE_EVENT","useChat","roomId","useState","messages","setMessages","socketRef","useRef","useEffect","query","incomingMessage","ownedByCurrentUser","senderId","sendMessage","messageBody","trim","emit","ChatProfile","info","ChatArea","React","newMessage","setNewMessage","handleSendMessage","Date","toTimeString","substring","value","onChange","event","target","placeholder","onKeyUp","keyCode","ComingSoon","Home","home1","Profile","SignIn","username","password","type","setState","Main","MainWrapper","children","process","App","version","rerender","bind","unscribe","subscribe","checkToken","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.376de59c.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\ntype d = {\r\n    isAuthorized: boolean,\r\n    currentPage: number\r\n}\r\n\r\nconst initialState: d = {\r\n    isAuthorized: false,\r\n    currentPage: parseInt(localStorage.getItem('currentPage') || '0'),\r\n}\r\n\r\nconst state = createSlice({\r\n    name: 'state',\r\n    initialState,\r\n    reducers: {\r\n        togglePage(store, action: { payload: number, type: string }) {\r\n            store.currentPage = action.payload;\r\n            localStorage.setItem('currentPage', store.currentPage.toString());\r\n        },\r\n        authorization(store, action: { payload: string | null, type: string }) {\r\n            if (action.payload !== null) {\r\n                localStorage.setItem('yoga', action.payload);\r\n                store.isAuthorized = true;\r\n            } else {\r\n                localStorage.removeItem('yoga');\r\n                store.isAuthorized = false;\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport default state.reducer;\r\nexport const { togglePage, authorization } = state.actions;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport state from './state';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        globalState: state\r\n    },\r\n})\r\n\r\nexport default store;","import socketIOClient, { io } from \"socket.io-client\";\r\nimport { authorization, togglePage } from \"./state\";\r\nimport store from \"./store\";\r\n\r\nconst SOCKET_SERVER_URL = 'http://localhost:5000';\r\nconst authUrl = SOCKET_SERVER_URL + '/auth';\r\nconst usersUrl = SOCKET_SERVER_URL + '/users';\r\n\r\n\r\n\r\n\r\nconst authSocket = io(authUrl, {\r\n    transports: ['websocket'],\r\n    secure: true,\r\n})\r\n\r\n// socketIOClient(authUrl, {\r\n//     transports: ['websocket'],\r\n//     secure: true,\r\n// });\r\n\r\nconst userSoket = socketIOClient(usersUrl, {\r\n    transports: ['websocket'],\r\n    secure: true,\r\n    autoConnect: true,\r\n    auth: { token: localStorage.getItem('yoga') },\r\n});\r\n\r\nauthSocket.on('connect_error', (err) => {\r\n    console.log('authSocket:', err);\r\n});\r\n\r\nuserSoket.on('connect_error', (err) => {\r\n    console.log('userSocket:', err);\r\n});\r\n\r\nauthSocket.on('auth: sign-in', (data: { status: number, msg: string, token: string }) => {\r\n    if (data.status === 200) {\r\n        store.dispatch(authorization(data.token));\r\n        store.dispatch(togglePage(6));\r\n        userSoket.auth = { token: localStorage.getItem('yoga') };\r\n        setTimeout(() => userSoket.connect(), 1000);\r\n    } else {\r\n        console.log('authSocket:', data.msg);\r\n    }\r\n})\r\n\r\nauthSocket.on('auth: check-token', (data: { status: number, msg: string }) => {\r\n    if (data.status === 200) {\r\n        store.dispatch(authorization(localStorage.getItem('yoga')));\r\n        userSoket.connect();\r\n    } else {\r\n        console.log(data.msg);\r\n        store.dispatch(authorization(null));\r\n        userSoket.disconnect();\r\n    }\r\n})\r\n\r\nexport const signIn = (username: string, password: string) => {\r\n    authSocket.emit('auth: sign-in', { username, password });\r\n}\r\n\r\nexport const checkToken = () => {\r\n    const token = localStorage.getItem('yoga');\r\n    if (token) {\r\n        authSocket.emit('auth: check-token', { token });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    userSoket.disconnect();\r\n    store.dispatch(authorization(null));\r\n    store.dispatch(togglePage(0));\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// export default class Connection {\r\n\r\n//     openAuthSocket() {\r\n//         const socket = socketIOClient(authUrl, {\r\n//             secure: true\r\n//         });\r\n\r\n//         socket.on(\"connect_error\", (err) => {\r\n//             console.log(err);\r\n//         });\r\n\r\n//         socket.on('auth: sign-in', (data: { status: number, msg: string, token: string }) => {\r\n//             if (data.status === 200) {\r\n//                 console.log(data.token);\r\n//                 localStorage.setItem('yoga', data.token);\r\n//                 store.dispatch(authorization(data.token));\r\n//                 store.dispatch(togglePage(6));\r\n//             } else {\r\n//                 console.log(data.msg);\r\n//             }\r\n//         })\r\n\r\n//         socket.on('auth: check-token', (data: { status: number, msg: string }) => {           \r\n//             if (data.status !== 200) {\r\n//                 console.log(data.msg);\r\n//                 localStorage.removeItem('yoga');\r\n//                 store.dispatch(authorization(null));\r\n//             } else {\r\n//                 store.dispatch(authorization(localStorage.getItem('yoga')));\r\n//             }\r\n//         })\r\n\r\n//         const signIn = (username: string, password: string) => {\r\n//             socket.emit('auth: sign-in', { username, password });\r\n//         }\r\n\r\n//         const checkToken = () => {\r\n//             socket.emit('auth: check-token', { token: localStorage.getItem('yoga') });\r\n//         }\r\n\r\n//         const signOut = () => {\r\n//             localStorage.removeItem('yoga');\r\n//             store.dispatch(authorization(null));\r\n//             store.dispatch(togglePage(0));\r\n//         }\r\n\r\n//         const closeConnection = () => {\r\n//             socket.close()\r\n//         }\r\n\r\n//         return {\r\n//             signIn, signOut, checkToken, closeConnection\r\n//         }\r\n//     }\r\n\r\n//     openUsersSocket() {\r\n//         const socket = socketIOClient(usersUrl, {\r\n//             secure: true,\r\n//             auth: {\r\n//                 token: localStorage.getItem('yoga')\r\n//             },\r\n//             autoConnect: false\r\n//         });\r\n//         socket.on(\"connect_error\", (err) => {\r\n//             console.log(err);\r\n//         });\r\n//         socket.on('', () => {\r\n\r\n//         })\r\n//         const openConnection = () => {\r\n//             socket.open()\r\n//         }\r\n//         const closeConnection = () => {\r\n//             socket.close()\r\n//         }\r\n//         return {\r\n//             closeConnection, openConnection\r\n//         }\r\n//     }\r\n\r\n// }\r\n","\r\nconst pages = new Map<number, {\r\n    id: number,\r\n    name: string,\r\n    view?: string,\r\n    icon?: JSX.Element\r\n}>()\r\n\r\npages.set(0, {\r\n    id: 0,\r\n    name: 'home',\r\n});\r\n\r\npages.set(1, {\r\n    id: 1,\r\n    name: 'sign-in',\r\n    view: 'Sign in',\r\n    icon: <i className=\"fas fa-sign-in-alt icon\"></i>\r\n});\r\n\r\npages.set(2, {\r\n    id: 2,\r\n    name: 'contacts',\r\n    view: 'Contacts',\r\n    icon: <span className=\"material-icons icon\">group</span>\r\n});\r\n\r\npages.set(3, {\r\n    id: 3,\r\n    name: 'chat',\r\n    view: 'Messages',\r\n    icon: <span className=\"fas fa-comments icon\"></span>,\r\n});\r\n\r\npages.set(6, {\r\n    id: 6,\r\n    name: 'Profile',\r\n    view: 'Profile',\r\n    icon: <span className=\"material-icons icon\">account_box</span>\r\n});\r\n\r\npages.set(4, {\r\n    id: 4,\r\n    name: 'groups',\r\n});\r\n\r\npages.set(5, {\r\n    id: 5,\r\n    name: 'feed',\r\n    view: 'Feed',\r\n    icon: <span className=\"material-icons icon\">article</span>,\r\n});\r\n\r\nexport default pages;\r\n","import classNames from 'classnames';\r\nimport { Component } from 'react';\r\nimport pages from '../data/pages';\r\nimport { togglePage } from '../data/state';\r\nimport store from '../data/store';\r\n\r\nconst pageIds = [[1], [3, 6]];\r\n\r\nexport default class Nav extends Component {\r\n    render() {\r\n        const state = store.getState().globalState;\r\n        return (\r\n            <nav>\r\n                <ul className=\"zero\">\r\n                    {\r\n                        pageIds[state.isAuthorized ? 1 : 0].map(pageId => {\r\n                            const page = pages.get(pageId);\r\n                            const clickHandler = () => store.dispatch(togglePage(pageId))\r\n                            const className = classNames({ current: pageId === state.currentPage })\r\n                            return (\r\n                                <li key={page?.name} >\r\n                                    <button className={className} onClick={clickHandler}>\r\n                                        {page?.icon || ''}\r\n                                        <span className=\"text\">{page?.view}</span>\r\n                                    </button>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </nav >\r\n        );\r\n    }\r\n}\r\n","import { Component } from 'react';\r\nimport { togglePage } from '../data/state';\r\nimport store from '../data/store';\r\nimport Nav from './Nav';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <div className=\"contaner\">\r\n                    <div onClick={onClick} className=\"title\">\r\n                        <h1>Corporate messaging</h1>\r\n                    </div>\r\n                    <Nav />\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nfunction onClick() {\r\n    if (!store.getState().globalState.isAuthorized) {\r\n        store.dispatch(togglePage(0));\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/user.2f28dce2.png\";","import { Component } from 'react';\r\nimport defaultUserPic from '../assets/user.png';\r\nimport classNames from 'classnames';\r\n\r\nexport default class ChatImage extends Component<{\r\n    picSrc?: string,\r\n    online?: boolean,\r\n    hideOnlineIcon?: boolean\r\n}> {\r\n    render() {\r\n        return (\r\n            <div className=\"chat-image\">\r\n                <img src={this.props.picSrc || defaultUserPic} alt=\"user\" />\r\n                {\r\n                    this.props.hideOnlineIcon ?\r\n                        <></> :\r\n                        <OnlineIndicator online={this.props.online || false} />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction OnlineIndicator(props: { online: boolean }) {\r\n    return (\r\n        <div className=\"online-indicator\">\r\n            <div className={classNames({\r\n                online: props.online,\r\n                offline: !props.online\r\n            })} />\r\n        </div >\r\n    )\r\n}\r\n","import classNames from 'classnames';\r\nimport { Component } from 'react';\r\nimport ChatImage from './ChatImage';\r\n\r\nexport default class Message extends Component<{\r\n    userName: string,\r\n    text: string,\r\n    time: string,\r\n    picSrc?: string,\r\n    showInfo?: boolean,\r\n    self?: boolean\r\n}> {\r\n    render() {\r\n        const condInfo = this.props.showInfo === undefined || this.props.showInfo;\r\n\r\n        return (\r\n            <article className={classNames({\r\n                message: true,\r\n                self: this.props.self\r\n            })}>\r\n                {condInfo ? <ChatImage hideOnlineIcon={true} picSrc={this.props.picSrc || undefined} /> : <></>}\r\n                <div className=\"message-box\">\r\n                    {condInfo ? <div className=\"name\">{this.props.userName}</div> : <></>}\r\n                    <div className=\"text\">{this.props.text}</div>\r\n                    <div className=\"time\">{this.props.time}</div>\r\n                </div>\r\n            </article>\r\n        )\r\n\r\n    }\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport socketIOClient, { Socket } from \"socket.io-client\";\r\nimport { DefaultEventsMap } from \"socket.io-client/build/typed-events\";\r\n// import { auth } from \"../data/firebase\";\r\n\r\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\"; // Name of the event\r\nconst SOCKET_SERVER_URL = \"http://localhost:5000\";\r\n\r\ntype TMessage = {\r\n    text: string,\r\n    name?: string,\r\n    picSrc?: string,\r\n    senderId: string,\r\n    ownedByCurrentUser?: boolean\r\n}\r\n\r\nconst useChat = (roomId: string) => {\r\n    const [messages, setMessages] = useState<TMessage[]>([]); // Sent and received messages\r\n    const socketRef = useRef<Socket<DefaultEventsMap, DefaultEventsMap>>();\r\n\r\n    useEffect(() => {\r\n\r\n        // Creates a WebSocket connection\r\n        socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n            \r\n            query: { roomId },\r\n            secure: true,\r\n        });\r\n\r\n        // Listens for incoming messages\r\n        socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message: TMessage) => {\r\n            const incomingMessage: TMessage = {\r\n                ...message,\r\n                ownedByCurrentUser: message.senderId === socketRef.current?.id,\r\n            };\r\n            setMessages((messages: TMessage[]) => [...messages, incomingMessage]);\r\n        });\r\n\r\n        // Destroys the socket reference when the connection is closed\r\n        return () => {\r\n            socketRef.current?.disconnect();\r\n        };\r\n    }, [roomId]);\r\n\r\n    // Sends a message to the server that\r\n    // forwards it to all users in the same room\r\n    const sendMessage = (messageBody: string) => {\r\n        if (messageBody.trim() !== '')\r\n            socketRef.current?.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n                text: messageBody,\r\n                // name: auth.currentUser?.displayName || \"Somebody\",\r\n                // picSrc: auth.currentUser?.photoURL,\r\n                senderId: socketRef.current.id,\r\n            });\r\n    };\r\n\r\n    return { messages, sendMessage };\r\n};\r\n\r\nexport default useChat;","import React from 'react';\r\nimport ChatImage from './ChatImage';\r\n\r\nexport default function ChatProfile(props: {\r\n    picSrc?: string,\r\n    name: string,\r\n    info: string\r\n}) {\r\n    return (\r\n        <section className=\"chat-profile\"><article>\r\n            <button className=\"back\">\r\n                <i className=\"fas fa-arrow-left\"></i>\r\n            </button>\r\n            <ChatImage hideOnlineIcon={true} picSrc={props.picSrc} />\r\n            <div className=\"title\">\r\n                <div className=\"name\">{props.name}</div>\r\n                <div className=\"info\">{props.info}</div>\r\n            </div>\r\n            <button className=\"more\">\r\n                <i className=\"fas fa-ellipsis-v\"></i>\r\n            </button>\r\n        </article></section>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Message from '../components/Message';\r\nimport useChat from '../hooks/useChat';\r\nimport ChatProfile from '../components/ChatProfile';\r\n\r\nexport default function ChatArea() {\r\n    let roomId: string = '0000';\r\n\r\n    const { messages, sendMessage } = useChat(roomId); // Creates a websocket and manages messaging\r\n    const [newMessage, setNewMessage] = React.useState(\"\"); // Message to be sent\r\n\r\n    const handleNewMessageChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        setNewMessage(event.target.value);\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        sendMessage(newMessage);\r\n        setNewMessage(\"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"page chat-area\">\r\n            <ChatProfile\r\n                name=\"room 0000\"\r\n                info=\"\"\r\n            />\r\n            <section className=\"chat-output\">\r\n                {messages.map((message) => (\r\n                    <Message\r\n                        userName={message.name || \"Somebody\"}\r\n                        text={message.text}\r\n                        time={new Date().toTimeString().substring(0, 5)}\r\n                        picSrc={message.picSrc}\r\n                        showInfo={true}\r\n                        self={message.ownedByCurrentUser}\r\n                    />\r\n                ))}\r\n            </section>\r\n            <section className=\"chat-input\">\r\n                <article className=\"input\">\r\n                    <div className=\"input-contaner chat-input\">\r\n                        <button>\r\n                            <span className=\"material-icons\">attach_file</span>\r\n                        </button>\r\n                        <textarea\r\n                            value={newMessage}\r\n                            onChange={handleNewMessageChange}\r\n                            placeholder=\"Enter your message\"\r\n                            onKeyUp={(event: React.KeyboardEvent<HTMLTextAreaElement>) => {\r\n                                if (event.keyCode === 13) {\r\n                                    handleSendMessage()\r\n                                }\r\n                            }}\r\n                        />\r\n                        <button\r\n                            onClick={handleSendMessage}\r\n                        >\r\n                            <span className=\"material-icons\">send</span>\r\n                        </button>\r\n                    </div>\r\n                </article>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import { Component } from 'react';\r\n\r\nexport default class ComingSoon extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page coming-soon\">\r\n                <div>Coming soon...</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/home1.38963afa.jpg\";","import { Component } from 'react';\r\nimport { togglePage } from '../data/state';\r\nimport store from '../data/store';\r\nimport home1 from '../assets/home1.jpg';\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page home\">\r\n                <section className=\"header\">\r\n                    <article className=\"title\">\r\n                        <h1>Corporate messaging</h1>\r\n                        <div>Business at hand</div>\r\n                        <button onClick={() => store.dispatch(togglePage(1))}>Get started...</button>\r\n                    </article>\r\n                    <article className=\"buttons\">\r\n                        <div className=\"col1\">\r\n                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Sed dolore maxime eius qui, assumenda mollitia necessitatibus harum accusamus commodi nobis quas ullam nihil molestias vel ducimus cupiditate a asperiores reprehenderit.</p>\r\n                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugiat asperiores iusto ex amet dolore rerum sit quibusdam quod velit voluptatem distinctio eligendi eos culpa dolorum itaque maxime minus numquam inventore officiis sed perspiciatis adipisci, eveniet laudantium. Aperiam reprehenderit incidunt blanditiis.</p>\r\n                        </div>\r\n                        <div className=\"col2\">\r\n\r\n\r\n                            <div className=\"photo-wrapper\">\r\n                                <img src={home1} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                    </article>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import { Component } from 'react';\r\nimport { signOut } from '../data/Connection';\r\n\r\nexport default class Profile extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page profile\">\r\n                <section className=\"header\">\r\n                    <article>\r\n\r\n                    </article>\r\n                </section>\r\n                <section className=\"info\">\r\n                    <article>\r\n\r\n                    </article>\r\n                </section>\r\n                <section className=\"actions\">\r\n                    <article>\r\n                        <button onClick={signOut}>Sign out</button>\r\n                    </article>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Component } from 'react';\r\nimport { signIn } from '../data/Connection';\r\n\r\nexport default class SignIn extends Component<{}, {\r\n    username: string,\r\n    password: string\r\n}> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page sign-in\">\r\n                <section>\r\n                    <article>\r\n                        <div className=\"input-wrapper\">\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Username\"\r\n                                onChange={(event) => this.setState({username: event.target.value})}\r\n                            />\r\n                        </div>\r\n                        <div className=\"input-wrapper\">\r\n                            <input\r\n                                type=\"password\"\r\n                                placeholder=\"Password\"\r\n                                onChange={(event) => this.setState({password: event.target.value})}\r\n                            />\r\n                        </div>\r\n                        <button onClick={() => {\r\n                            signIn(this.state.username, this.state.password)\r\n                        }}>Sign in</button>\r\n                    </article>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { Component } from 'react';\r\nimport store from '../data/store';\r\nimport ChatArea from '../pages/ChatArea';\r\nimport ComingSoon from '../pages/ComingSoon';\r\nimport Home from '../pages/Home';\r\nimport Profile from '../pages/Profile';\r\nimport SignIn from '../pages/SignIn';\r\n\r\nexport default class Main extends Component {\r\n    render() {\r\n        switch (store.getState().globalState.currentPage) {\r\n            case 0:\r\n                return <MainWrapper><Home /></MainWrapper>;\r\n            case 1:\r\n                return <MainWrapper><SignIn /></MainWrapper>;\r\n            case 3:\r\n                return <MainWrapper><ChatArea /></MainWrapper>;\r\n            case 6:\r\n                return <MainWrapper><Profile /></MainWrapper>;\r\n            default:\r\n                return <MainWrapper><ComingSoon /></MainWrapper>;\r\n        }\r\n    }\r\n}\r\n\r\nfunction MainWrapper(props: { children?: React.ReactNode }) {\r\n    return (\r\n        <main>\r\n            <div className=\"contaner\">\r\n                {props.children}\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\n","import { Component } from 'react';\r\nimport { checkToken } from '../data/Connection';\r\nimport store from '../data/store';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\n\r\nconsole.log(process.env);\r\n\r\nexport default class App extends Component<{}, { version: number }> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = { version: 0 }\r\n        this.rerender = this.rerender.bind(this);\r\n    }\r\n\r\n    unscribe() {}\r\n\r\n    rerender() {\r\n        this.setState({ version: this.state.version + 1 })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.unscribe = store.subscribe(this.rerender);\r\n        checkToken();       \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unscribe();\r\n    }\r\n\r\n    componentDidUpdate() {        \r\n        // console.log(store.getState().globalState.currentPage);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Main />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './styles/index.scss';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}